{
  "openapi": "3.0.1",
  "info": {
    "title": "Airport Control System API",
    "description": "API documentation for Airport Control System",
    "version": "1.0.0"
  },
  "servers": [
    { "url": "http://localhost:8080", "description": "Generated server url" }
  ],
  "security": [{ "bearerAuth": [] }],
  "tags": [
    {
      "name": "Azure Pre-signed URL File Management",
      "description": "APIs quản lý file đính kèm sử dụng Azure Pre-signed URL"
    },
    { "name": "User Management", "description": "APIs for managing users" },
    { "name": "Authentication", "description": "APIs for user authentication" },
    {
      "name": "Activity Management",
      "description": "APIs for managing activities and events"
    },
    { "name": "Team Management", "description": "APIs for managing teams" },
    {
      "name": "Task Type Management",
      "description": "APIs for managing task types - Quản lý loại công việc"
    },
    { "name": "Unit Management", "description": "APIs for managing units" }
  ],
  "paths": {
    "/api/users/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get user by ID",
        "description": "Retrieve a user by their ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "404": {
            "description": "User not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved user",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UserApiResponse" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User Management"],
        "summary": "Update user",
        "description": "Update an existing user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UserApiResponse" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User Management"],
        "summary": "Delete user",
        "description": "Delete a user by ID",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-shifts/{id}": {
      "get": {
        "tags": ["user-shift-controller"],
        "summary": "Get user shift by ID",
        "description": "Retrieve a user shift by their ID",
        "operationId": "getUserShiftById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user shift",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "User shift not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["user-shift-controller"],
        "summary": "Update user shift",
        "description": "Update an existing user shift",
        "operationId": "updateUserShift",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AssignShiftRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User shift updated successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "User shift not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["user-shift-controller"],
        "summary": "Delete user shift",
        "description": "Delete a user shift by ID",
        "operationId": "deleteUserShift",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "204": {
            "description": "User shift deleted successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/{id}": {
      "put": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Update user flight shift",
        "description": "Update user flight shift by id",
        "operationId": "updateUserFlightShift",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserFlightShiftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated user flight shift",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Delete user flight shift",
        "description": "Delete a user flight shift by ID",
        "operationId": "deleteUserFlightShift",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "User flight shift deleted successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "tags": ["task-controller"],
        "summary": "Lấy chi tiết task",
        "description": "Lấy chi tiết một công việc theo id",
        "operationId": "getTaskDetailById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy công việc",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["task-controller"],
        "summary": "Cập nhật task",
        "description": "Cập nhật một công việc theo id",
        "operationId": "updateTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTaskDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/TaskApiResponse" }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy công việc",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["task-controller"],
        "summary": "Xoá task",
        "description": "Xoá một công việc theo id",
        "operationId": "deleteTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Xoá thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/task-types/{id}": {
      "get": {
        "tags": ["Task Type Management"],
        "summary": "Get task type by ID",
        "description": "Retrieve a specific task type by its ID",
        "operationId": "getTaskTypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task type ID",
            "required": true,
            "schema": { "type": "integer", "format": "int32" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Task type retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" },
                "examples": {
                  "Success Response": {
                    "description": "Success Response",
                    "value": {
                      "message": "Thành công",
                      "statusCode": 200,
                      "success": true,
                      "data": { "id": 1, "name": "Bảo trì" }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "Task type not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" },
                "examples": {
                  "Not Found": {
                    "description": "Not Found",
                    "value": {
                      "message": "Không tìm thấy loại công việc",
                      "statusCode": 404,
                      "success": false,
                      "data": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Task Type Management"],
        "summary": "Update task type",
        "description": "Update an existing task type",
        "operationId": "updateTaskType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task type ID",
            "required": true,
            "schema": { "type": "integer", "format": "int32" },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTaskTypeRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Task type with same name already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "Task type not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Task type updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Task Type Management"],
        "summary": "Delete task type",
        "description": "Delete a task type (only if not being used by any tasks)",
        "operationId": "deleteTaskType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task type ID",
            "required": true,
            "schema": { "type": "integer", "format": "int32" },
            "example": 1
          }
        ],
        "responses": {
          "404": {
            "description": "Task type not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "409": {
            "description": "Task type is being used by existing tasks",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Task type deleted successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/shifts/{id}": {
      "get": {
        "tags": ["shift-controller"],
        "operationId": "getShiftById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["shift-controller"],
        "operationId": "updateShift",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Shift" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["shift-controller"],
        "operationId": "deleteShift",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": ["role-controller"],
        "operationId": "getRoleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/RoleDTO" } }
            }
          }
        }
      },
      "put": {
        "tags": ["role-controller"],
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoleDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/RoleDTO" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["role-controller"],
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/flights/{id}": {
      "get": {
        "tags": ["flight-controller"],
        "summary": "Get flight by ID",
        "description": "Retrieve a flight by its ID",
        "operationId": "getFlightById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "404": {
            "description": "Flight not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved flight",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["flight-controller"],
        "summary": "Update flight",
        "description": "Update an existing flight with validated request data",
        "operationId": "updateFlight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateFlightRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Flight not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Flight updated successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["flight-controller"],
        "summary": "Delete flight",
        "description": "Delete a flight by ID",
        "operationId": "deleteFlight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "204": {
            "description": "Flight deleted successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/attachments/{id}": {
      "get": {
        "tags": ["Azure Pre-signed URL File Management"],
        "summary": "Xem chi tiết file đính kèm",
        "description": "Lấy chi tiết một file đính kèm theo ID",
        "operationId": "getAttachmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy chi tiết file thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy file đính kèm",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Azure Pre-signed URL File Management"],
        "summary": "Cập nhật tên file đính kèm",
        "description": "Chỉ cho phép cập nhật tên file đính kèm (fileName)",
        "operationId": "updateAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttachmentFileNameRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cập nhật file thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy file đính kèm",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Azure Pre-signed URL File Management"],
        "summary": "Xóa file đính kèm",
        "description": "Xóa file đính kèm khỏi Azure Blob Storage và database",
        "operationId": "deleteAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa file thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Lỗi server khi xóa file",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy file đính kèm",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/assignments/{id}": {
      "get": {
        "tags": ["assignment-controller"],
        "summary": "Lấy chi tiết assignment",
        "description": "Lấy chi tiết một assignment theo id",
        "operationId": "getAssignmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "404": {
            "description": "Không tìm thấy assignment",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Lấy assignment thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["assignment-controller"],
        "summary": "Cập nhật assignment",
        "description": "Cập nhật thông tin assignment",
        "operationId": "updateAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Không tìm thấy assignment",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Cập nhật assignment thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["assignment-controller"],
        "summary": "Xoá assignment",
        "description": "Xoá một assignment theo id",
        "operationId": "deleteAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Xoá assignment thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/airports/{id}": {
      "get": {
        "tags": ["airport-controller"],
        "summary": "Get airport by ID",
        "description": "Retrieve an airport by its ID",
        "operationId": "getAirportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "404": {
            "description": "Airport not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved airport",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["airport-controller"],
        "summary": "Update airport",
        "description": "Update an existing airport",
        "operationId": "updateAirport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Airport" }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Airport not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Airport updated successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["airport-controller"],
        "summary": "Delete airport",
        "description": "Delete an airport by ID",
        "operationId": "deleteAirport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "204": {
            "description": "Airport deleted successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities/{id}": {
      "get": {
        "tags": ["Activity Management"],
        "summary": "Lấy chi tiết hoạt động",
        "description": "Lấy thông tin chi tiết hoạt động theo ID",
        "operationId": "getActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của hoạt động",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hoạt động",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Activity Management"],
        "summary": "Cập nhật hoạt động",
        "description": "Cập nhật thông tin hoạt động theo ID",
        "operationId": "updateActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của hoạt động",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ActivityRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hoạt động",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Activity Management"],
        "summary": "Xóa hoạt động",
        "description": "Xóa hoạt động theo ID",
        "operationId": "deleteActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của hoạt động",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hoạt động",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities/{id}/pin": {
      "put": {
        "tags": ["Activity Management"],
        "summary": "Ghim/bỏ ghim hoạt động",
        "description": "Ghim hoặc bỏ ghim hoạt động để ưu tiên hiển thị",
        "operationId": "pinActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của hoạt động",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "pinned",
            "in": "query",
            "description": "Trạng thái ghim (true: ghim, false: bỏ ghim)",
            "required": true,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "404": {
            "description": "Không tìm thấy hoạt động",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Cập nhật trạng thái ghim thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Successfully retrieved all users",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UserListApiResponse" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User Management"],
        "summary": "Create user",
        "description": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UserApiResponse" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/users/logout-cleanup": {
      "post": {
        "tags": ["User Management"],
        "operationId": "logoutCleanup",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/api/users/expo-push-token": {
      "post": {
        "tags": ["User Management"],
        "summary": "Save Expo Push Token",
        "description": "Save Expo Push Token for the current user",
        "operationId": "saveExpoPushToken",
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Expo push token saved successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/users/device-token/remove": {
      "post": {
        "tags": ["User Management"],
        "operationId": "removeDeviceToken",
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/api/user-shifts/batch": {
      "post": {
        "tags": ["user-shift-controller"],
        "summary": "Assign multiple shifts",
        "description": "Assign multiple shifts to users in batch",
        "operationId": "saveUserShiftsBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/AssignShiftRequest" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Shifts assigned successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "409": {
            "description": "Conflict in shift assignment",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-shifts/assign": {
      "post": {
        "tags": ["user-shift-controller"],
        "summary": "Assign shift to user",
        "description": "Assign a specific shift to a user on a given date",
        "operationId": "assignShiftToUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AssignShiftRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "User already has a shift on this date",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Shift assigned successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-shifts/apply-multi": {
      "post": {
        "tags": ["user-shift-controller"],
        "summary": "Apply shift to multiple users",
        "description": "Apply a shift to multiple users at once",
        "operationId": "applyShiftToUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ApplyShiftMultiDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Conflict in applying shifts",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Shifts applied successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/apply": {
      "post": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Apply user flight shift",
        "description": "Apply a new user flight shift",
        "operationId": "applyFlightShift",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyFlightShiftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User flight shift applied successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/teams": {
      "get": {
        "tags": ["Team Management"],
        "summary": "Get all teams",
        "description": "Retrieve a list of all teams",
        "operationId": "getAllTeams",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved all teams",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/TeamListApiResponse" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Team Management"],
        "summary": "Create a new team",
        "description": "Create a new team with the provided details",
        "operationId": "createTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TeamDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "201": {
            "description": "Team created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamCreateApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": ["task-controller"],
        "summary": "Lấy danh sách task",
        "description": "Lấy danh sách tất cả công việc",
        "operationId": "getAllTaskDetails",
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSubtasksApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["task-controller"],
        "summary": "Tạo task",
        "description": "Tạo mới một công việc",
        "operationId": "createTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateTaskRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tạo thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/TaskApiResponse" }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{parentId}/subtasks": {
      "post": {
        "tags": ["task-controller"],
        "summary": "Tạo subtask",
        "description": "Tạo subtask con cho một task cha",
        "operationId": "createSubtask",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateSubtaskRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Không tìm thấy task cha",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "201": {
            "description": "Tạo subtask thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/TaskApiResponse" }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}/attachments": {
      "get": {
        "tags": ["task-controller"],
        "summary": "Lấy danh sách file đính kèm của task",
        "description": "Lấy tất cả file đính kèm trực tiếp của task",
        "operationId": "getTaskAttachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAttachmentsApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy task",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["task-controller"],
        "summary": "Thêm file đính kèm vào task",
        "description": "Thêm các file đính kèm đã upload vào task cụ thể. File đính kèm phải được upload trước thông qua /api/attachments/generate-upload-urls và confirm-upload",
        "operationId": "addAttachmentsToTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskAttachmentUploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Thêm file đính kèm thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskAttachmentsApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu đầu vào không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy task hoặc attachment",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "409": {
            "description": "Attachment đã được gán vào task khác",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["task-controller"],
        "summary": "Xóa file đính kèm khỏi task",
        "description": "Xóa các file đính kèm khỏi task cụ thể. File sẽ không bị xóa vĩnh viễn mà chỉ được gỡ liên kết khỏi task",
        "operationId": "removeAttachmentsFromTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskAttachmentUploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Dữ liệu đầu vào không hợp lệ",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { "type": "object" }
                }
              }
            }
          },
          "200": {
            "description": "Xóa file đính kèm thành công",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { "type": "object" }
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy task",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { "type": "object" }
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/force-update-overdue": {
      "post": {
        "tags": ["task-controller"],
        "summary": "Force update overdue status",
        "description": "Manually trigger overdue status update for all assignments and tasks. Useful for testing or immediate update without waiting for scheduled job.",
        "operationId": "forceUpdateOverdueStatus",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Overdue update completed successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/task-types": {
      "get": {
        "tags": ["Task Type Management"],
        "summary": "Get all task types",
        "description": "Lấy tất cả loại công việc trong hệ thống",
        "operationId": "getAllTaskTypes",
        "responses": {
          "200": {
            "description": "Task types retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" },
                "examples": {
                  "Success Response": {
                    "description": "Success Response",
                    "value": {
                      "message": "Thành công",
                      "statusCode": 200,
                      "success": true,
                      "data": [
                        { "id": 1, "name": "Bảo trì" },
                        { "id": 2, "name": "An ninh" },
                        { "id": 3, "name": "Vệ sinh" }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Task Type Management"],
        "summary": "Create new task type",
        "description": "Tạo loại công việc mới với tên được chỉ định",
        "operationId": "createTaskType",
        "requestBody": {
          "description": "Task type creation request",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateTaskTypeRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" },
                "examples": {
                  "Bad Request": {
                    "description": "Bad Request",
                    "value": {
                      "message": "Tên loại công việc không được để trống",
                      "statusCode": 400,
                      "success": false,
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Task type with same name already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" },
                "examples": {
                  "Conflict": {
                    "description": "Conflict",
                    "value": {
                      "message": "Loại công việc đã tồn tại",
                      "statusCode": 409,
                      "success": false,
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "201": {
            "description": "Task type created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" },
                "examples": {
                  "Success Response": {
                    "description": "Success Response",
                    "value": {
                      "message": "Đã tạo thành công",
                      "statusCode": 201,
                      "success": true,
                      "data": { "id": 1, "name": "Bảo trì" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/shifts": {
      "get": {
        "tags": ["shift-controller"],
        "operationId": "getAllShifts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["shift-controller"],
        "operationId": "createShift",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Shift" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": ["role-controller"],
        "operationId": "getAllRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RoleDTO" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["role-controller"],
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RoleDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/RoleDTO" } }
            }
          }
        }
      }
    },
    "/api/overdue/update": {
      "post": {
        "tags": ["overdue-controller"],
        "summary": "Cập nhật trạng thái overdue",
        "description": "Manual trigger để cập nhật trạng thái overdue cho tasks và assignments",
        "operationId": "updateOverdueStatus",
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Lỗi server",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/notifications/read/{id}": {
      "post": {
        "tags": ["notification-controller"],
        "operationId": "markAsRead",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/flights": {
      "get": {
        "tags": ["flight-controller"],
        "summary": "Get all flights",
        "description": "Retrieve a list of all flights",
        "operationId": "getAllFlights",
        "responses": {
          "200": {
            "description": "Successfully retrieved all flights",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["flight-controller"],
        "summary": "Create flight",
        "description": "Create a new flight",
        "operationId": "createFlight",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateFlightRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Flight created successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User registration",
        "description": "Register a new user",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "201": {
            "description": "Registration successful",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/RegisterApiResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid input or user already exists",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate user and return JWT token",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "User not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Login successful",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/LoginApiResponse" }
              }
            }
          }
        }
      }
    },
    "/api/auth/change-password-first-login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Change password on first login",
        "description": "Change password for users logging in for the first time",
        "operationId": "changePasswordFirstLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirstLoginPasswordChangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid current password",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Invalid request or password validation failed",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/attachments/generate-upload-urls": {
      "post": {
        "tags": ["Azure Pre-signed URL File Management"],
        "summary": "Tạo pre-signed URL để upload file",
        "description": "Tạo pre-signed URL để client upload file trực tiếp lên Azure Blob Storage. Tự động detect và xử lý cả single file (1 file) và multiple files (nhiều file)",
        "operationId": "generateUploadUrls",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FlexibleUploadRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Dữ liệu đầu vào không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Lỗi server khi tạo pre-signed URL",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Tạo pre-signed URL thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PreSignedUrlApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/confirm-upload": {
      "post": {
        "tags": ["Azure Pre-signed URL File Management"],
        "summary": "Xác nhận upload thành công",
        "description": "Xác nhận file đã được upload thành công qua pre-signed URL. Tự động detect và xử lý cả single file và multiple files",
        "operationId": "confirmUpload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmFlexibleUploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Lỗi server khi xác nhận upload",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Xác nhận upload thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentListApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy file hoặc upload thất bại",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/assignments": {
      "post": {
        "tags": ["assignment-controller"],
        "summary": "Tạo assignment cho nhiều người",
        "description": "Tạo mới nhiều assignment cùng lúc cho nhiều người nhận việc",
        "operationId": "createAssignments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssignmentsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tạo assignment thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/assignments/{id}/comment": {
      "post": {
        "tags": ["assignment-controller"],
        "summary": "Thêm comment cho assignment",
        "description": "Thêm comment vào assignment, nhận JSON {\"comment\": \"...\"}",
        "operationId": "addAssignmentComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Thêm comment thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentCommentsApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/airports": {
      "get": {
        "tags": ["airport-controller"],
        "summary": "Get all airports",
        "description": "Retrieve a list of all airports",
        "operationId": "getAllAirports",
        "responses": {
          "200": {
            "description": "Successfully retrieved all airports",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["airport-controller"],
        "summary": "Create airport",
        "description": "Create a new airport",
        "operationId": "createAirport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Airport" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Airport created successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities": {
      "get": {
        "tags": ["Activity Management"],
        "summary": "Lấy danh sách hoạt động cho calendar",
        "description": "Lấy danh sách hoạt động theo loại hoặc tìm kiếm theo từ khóa (tên, ghi chú, địa điểm) và người tham gia. Hỗ trợ lọc theo khoảng ngày cho calendar view. Nếu không truyền type parameter thì trả về calendar trống.",
        "operationId": "getAllActivities",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Từ khóa tìm kiếm (tìm trong tiêu đề, mô tả, địa điểm)",
            "required": false,
            "schema": { "type": "string" },
            "example": "Họp định kỳ"
          },
          {
            "name": "participantType",
            "in": "query",
            "description": "Loại người tham gia",
            "required": false,
            "schema": { "type": "string", "enum": ["USER", "TEAM", "UNIT"] },
            "example": "USER"
          },
          {
            "name": "participantId",
            "in": "query",
            "description": "ID của người tham gia",
            "required": false,
            "schema": { "type": "integer", "format": "int64" },
            "example": 1
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Ngày bắt đầu để lọc (format: yyyy-MM-dd)",
            "required": false,
            "schema": { "type": "string" },
            "example": "2025-01-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Ngày kết thúc để lọc (format: yyyy-MM-dd)",
            "required": false,
            "schema": { "type": "string" },
            "example": "2025-01-31"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Loại hoạt động: 'company' (toàn công ty) hoặc 'my' (cá nhân). Nếu không truyền sẽ trả về empty list",
            "required": false,
            "schema": { "type": "string", "enum": ["my", "company"] },
            "example": "company"
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/CalendarApiResponse" }
              }
            }
          },
          "400": {
            "description": "Tham số không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "401": {
            "description": "Không có quyền truy cập hoặc không tìm thấy người dùng",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Activity Management"],
        "summary": "Tạo hoạt động mới",
        "description": "Tạo mới một hoạt động/sự kiện",
        "operationId": "createActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ActivityRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "201": {
            "description": "Tạo thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities/{id}/participants": {
      "post": {
        "tags": ["Activity Management"],
        "summary": "Thêm người tham gia",
        "description": "Thêm danh sách người tham gia vào hoạt động",
        "operationId": "addParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của hoạt động",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityParticipantRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Thêm người tham gia thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityParticipantsApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hoạt động",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Activity Management"],
        "summary": "Xóa người tham gia",
        "description": "Xóa một người tham gia khỏi hoạt động",
        "operationId": "removeParticipant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của hoạt động",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "participantType",
            "in": "query",
            "description": "Loại người tham gia",
            "required": true,
            "schema": { "type": "string" },
            "example": "USER"
          },
          {
            "name": "participantId",
            "in": "query",
            "description": "ID của người tham gia",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "404": {
            "description": "Không tìm thấy hoạt động hoặc người tham gia",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Tham số không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Xóa người tham gia thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/flights/{id}/times": {
      "patch": {
        "tags": ["flight-controller"],
        "summary": "Update flight times",
        "description": "Update flight departure/arrival times",
        "operationId": "updateFlightTimes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightTimeUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Flight times updated successfully",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/api/flights/{id}/actual-time-notify": {
      "patch": {
        "tags": ["flight-controller"],
        "summary": "Update actual time and notify",
        "description": "Update actual flight time and send notifications to relevant users",
        "operationId": "updateActualTimeAndNotify",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightTimeUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid request or flight not found",
            "content": { "*/*": { "schema": { "type": "object" } } }
          },
          "200": {
            "description": "Actual time updated and notifications sent",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health-controller"],
        "operationId": "simpleHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/users/search": {
      "get": {
        "tags": ["User Management"],
        "summary": "Search users",
        "description": "Search users by keyword (name or email)",
        "operationId": "searchUsersByKeyword",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully searched users",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get current user",
        "description": "Get the current user based on token",
        "operationId": "getCurrentUser",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved current user",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/filter": {
      "get": {
        "tags": ["User Management"],
        "summary": "Filter users",
        "description": "Filter users by team, unit, or search text",
        "operationId": "filterUsers",
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "unitId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Invalid filter parameters",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully filtered users",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UserListApiResponse" }
              }
            }
          }
        }
      }
    },
    "/api/users/directors": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get users with role DIRECTOR or VICE_DIRECTOR",
        "description": "Retrieve a list of users with role DIRECTOR or VICE_DIRECTOR",
        "operationId": "getDirectorsAndViceDirectors",
        "responses": {
          "200": {
            "description": "Successfully retrieved directors and vice directors",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/users/assignable": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get assignable users",
        "description": "Lấy danh sách user mà user hiện tại có thể giao việc cho theo phân quyền",
        "operationId": "getAssignableUsers",
        "responses": {
          "200": {
            "description": "Successfully retrieved assignable users",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UserListApiResponse" }
              }
            }
          },
          "403": {
            "description": "Forbidden - User not authorized",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-shifts": {
      "get": {
        "tags": ["user-shift-controller"],
        "summary": "Get all user shifts",
        "description": "Retrieve all user shift assignments",
        "operationId": "getAllUserShifts",
        "responses": {
          "200": {
            "description": "Successfully retrieved all user shifts",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-shifts/user/{userId}": {
      "get": {
        "tags": ["user-shift-controller"],
        "summary": "Get user shifts by user ID",
        "description": "Get all shifts for a specific user",
        "operationId": "getUserShiftsByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user's shifts",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-shifts/on-duty": {
      "get": {
        "tags": ["user-shift-controller"],
        "summary": "Get users on duty",
        "description": "Get list of user IDs who are on duty at specific date and time",
        "operationId": "getUsersOnDuty",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          },
          {
            "name": "time",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users on duty",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-shifts/my-shifts": {
      "get": {
        "tags": ["user-shift-controller"],
        "summary": "Get current user's shifts",
        "description": "Get shifts for the currently authenticated user",
        "operationId": "getMyShifts",
        "responses": {
          "200": {
            "description": "Successfully retrieved user's shifts",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-shifts/filter": {
      "get": {
        "tags": ["user-shift-controller"],
        "summary": "Get schedules by criteria",
        "description": "Filter schedules by date, team, and unit",
        "operationId": "getSchedulesByCriteria",
        "parameters": [
          {
            "name": "shiftDate",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "teamId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "unitId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully filtered schedules",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-shifts/filter-by-user-and-range": {
      "get": {
        "tags": ["user-shift-controller"],
        "summary": "Filter schedules by user and date range",
        "description": "Get schedules for a specific user within a date range",
        "operationId": "filterByUserAndRange",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully filtered schedules by user and date range",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts": {
      "get": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Get all user flight shifts",
        "description": "Retrieve a list of all user flight shifts (DTO only)",
        "operationId": "getAllUserFlightShifts",
        "responses": {
          "200": {
            "description": "Successfully retrieved all user flight shifts",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/shifts": {
      "get": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Get user flight shifts by flight and date",
        "description": "Retrieve user flight shifts by flight and date",
        "operationId": "getShiftsByFlightAndDate",
        "parameters": [
          {
            "name": "flightId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user flight shifts by flight and date",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/filter": {
      "get": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Filter user flight shifts",
        "description": "Filter user flight shifts by criteria",
        "operationId": "getFlightSchedules",
        "parameters": [
          {
            "name": "shiftDate",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          },
          {
            "name": "teamId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "unitId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "flightId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully filtered user flight shifts",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/filter-schedules": {
      "get": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Filter user flight shifts",
        "description": "Filter user flight shifts by date, team, unit",
        "operationId": "filterUserFlightShifts",
        "parameters": [
          {
            "name": "shiftDate",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          },
          {
            "name": "teamId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "unitId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully filtered user flight shifts",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/date/{date}": {
      "get": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Get shifts by date",
        "description": "Get all user flight shifts for a specific date",
        "operationId": "getShiftsByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved shifts for the given date",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/check-assigned": {
      "get": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Check if user is assigned to flight",
        "description": "Check if user is assigned to a specific flight",
        "operationId": "isUserAssigned",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "flightId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "Check result retrieved successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/by-user/{userId}": {
      "get": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Get user flight shifts by user",
        "description": "Retrieve user flight shifts by user (DTO only)",
        "operationId": "getShiftsByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user flight shifts by user",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/available": {
      "get": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Get available user flight shifts",
        "description": "Retrieve available user flight shifts",
        "operationId": "getAvailableShifts",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved available user flight shifts",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/assigned": {
      "get": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Get assigned user flight shifts",
        "description": "Retrieve assigned user flight shifts",
        "operationId": "getAssignedShifts",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved assigned user flight shifts",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/units": {
      "get": {
        "tags": ["Unit Management"],
        "summary": "Get all units",
        "description": "Retrieve a list of all units or units by teamId",
        "operationId": "getUnits",
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all units",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UnitListApiResponse" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Invalid teamId parameter",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/units/assignable": {
      "get": {
        "tags": ["Unit Management"],
        "summary": "Get assignable units",
        "description": "Lấy danh sách unit mà user hiện tại có thể giao việc cho theo phân quyền",
        "operationId": "getAssignableUnits",
        "responses": {
          "403": {
            "description": "Forbidden - User not authorized",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved assignable units",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignableUnitsApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/assignable": {
      "get": {
        "tags": ["Team Management"],
        "summary": "Get assignable teams",
        "description": "Lấy danh sách team mà user hiện tại có thể giao việc cho theo phân quyền",
        "operationId": "getAssignableTeams",
        "responses": {
          "403": {
            "description": "Forbidden - User not authorized",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved assignable teams",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignableTeamsApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}/tree": {
      "get": {
        "tags": ["task-controller"],
        "summary": "Lấy toàn bộ cây con của task (hierarchical structure)",
        "description": "Lấy task cùng với tất cả subtask theo cấu trúc phân cấp nested - dễ dàng cho frontend hiển thị tree view",
        "operationId": "getTaskTree",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/TaskTreeApiResponse" }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy task",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}/subtree": {
      "get": {
        "tags": ["task-controller"],
        "summary": "Lấy toàn bộ cây con của task (flat list)",
        "description": "Lấy task cùng với tất cả subtask dưới dạng flat list",
        "operationId": "getTaskSubtree",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "404": {
            "description": "Không tìm thấy task",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSubtreeApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}/subtasks": {
      "get": {
        "tags": ["task-controller"],
        "summary": "Lấy danh sách subtask",
        "description": "Lấy tất cả subtask con của một task",
        "operationId": "getSubtasks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSubtasksApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/my": {
      "get": {
        "tags": ["task-controller"],
        "summary": "API tổng hợp: Lấy công việc của tôi với advanced search, filter status, pagination",
        "description": "🔥 UNIFIED API cho tất cả task types với advanced search và pagination. 📋 TASK TYPES: • created: Tasks đã tạo nhưng chưa giao việc (flat list) • assigned: Tasks đã giao việc (bao gồm subtasks với hierarchy) • received: Tasks được giao (flat list) 🎯 STATUS FILTER (chỉ cho assigned/received): IN_PROGRESS, COMPLETED, OVERDUE 🔍 KEYWORD SEARCH (cho tất cả types): Tìm kiếm trong 5 fields - ID, title, content, instructions, notes ⚡ ADVANCED FILTERS: priorities (LOW/NORMAL/HIGH/URGENT), time range (yyyy-MM-dd) 👥 RECIPIENT SEARCH (chỉ cho assigned): teamIds, userIds, unitIds (đơn giản hơn recipientTypes/recipientIds) 📄 PAGINATION: page (1-based), size (max 100, default 20)",
        "operationId": "getMyTasks",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Loại task",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["created", "assigned", "received"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter theo status (chỉ cho assigned/received)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["IN_PROGRESS", "COMPLETED", "OVERDUE"]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Từ khóa tìm kiếm (search trong 5 fields): ID, title, content, instructions, notes",
            "required": false,
            "schema": { "type": "string" },
            "example": "urgent task"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Ngày bắt đầu (format: yyyy-MM-dd)",
            "required": false,
            "schema": { "type": "string" },
            "example": "2025-08-01"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Ngày kết thúc (format: yyyy-MM-dd)",
            "required": false,
            "schema": { "type": "string" },
            "example": "2025-08-31"
          },
          {
            "name": "priorities",
            "in": "query",
            "description": "Danh sách priority để filter",
            "required": false,
            "schema": {
              "type": "array",
              "description": "LOW: Không khẩn cấp, NORMAL: Bình thường, HIGH: Quan trọng, URGENT: Khẩn cấp",
              "enum": ["LOW", "NORMAL", "HIGH", "URGENT"]
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Danh sách Team IDs để filter tasks giao cho teams (chỉ cho assigned)",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            },
            "example": "1,2,3"
          },
          {
            "name": "userIds",
            "in": "query",
            "description": "Danh sách User IDs để filter tasks giao cho users (chỉ cho assigned)",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            },
            "example": "1,5,10"
          },
          {
            "name": "unitIds",
            "in": "query",
            "description": "Danh sách Unit IDs để filter tasks giao cho units (chỉ cho assigned)",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            },
            "example": "1,2"
          },
          {
            "name": "taskTypeIds",
            "in": "query",
            "description": "Danh sách Task Type IDs để filter theo loại công việc",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            },
            "example": "1,2,3"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Số trang (bắt đầu từ 1)",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 1 },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Số items per page (max 100)",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 20 },
            "example": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/MyTasksApiResponse" }
              }
            }
          },
          "400": {
            "description": "Tham số không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/tasks/company": {
      "get": {
        "tags": ["task-controller"],
        "summary": "API công ty: Lấy tất cả công việc theo phân quyền với advanced search, filter status, pagination",
        "description": "🏢 COMPANY API với role-based permissions: 📋 PERMISSION LOGIC: • ADMIN/DIRECTOR/VICE_DIRECTOR: Xem TẤT CẢ tasks trong hệ thống • Các role khác: Xem tasks của TEAM + tasks của các UNIT thuộc team đó 🎯 STATUS FILTER: IN_PROGRESS, COMPLETED, OVERDUE 🔍 KEYWORD SEARCH: Tìm kiếm trong 5 fields - ID, title, content, instructions, notes ⚡ ADVANCED FILTERS: priorities (LOW/NORMAL/HIGH/URGENT), time range (yyyy-MM-dd) 👥 RECIPIENT SEARCH: teamIds, userIds, unitIds (đơn giản hơn recipientTypes/recipientIds) 📄 PAGINATION: page (1-based), size (max 100, default 20)",
        "operationId": "getCompanyTasks",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter theo status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["IN_PROGRESS", "COMPLETED", "OVERDUE", "OPEN"]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Từ khóa tìm kiếm (search trong 5 fields): ID, title, content, instructions, notes",
            "required": false,
            "schema": { "type": "string" },
            "example": "urgent task"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Ngày bắt đầu (format: yyyy-MM-dd)",
            "required": false,
            "schema": { "type": "string" },
            "example": "2025-08-01"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Ngày kết thúc (format: yyyy-MM-dd)",
            "required": false,
            "schema": { "type": "string" },
            "example": "2025-08-31"
          },
          {
            "name": "priorities",
            "in": "query",
            "description": "Danh sách priority để filter",
            "required": false,
            "schema": {
              "type": "array",
              "description": "LOW: Không khẩn cấp, NORMAL: Bình thường, HIGH: Quan trọng, URGENT: Khẩn cấp",
              "enum": ["LOW", "NORMAL", "HIGH", "URGENT"]
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Danh sách Team IDs để filter tasks giao cho teams",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            },
            "example": "1,2,3"
          },
          {
            "name": "userIds",
            "in": "query",
            "description": "Danh sách User IDs để filter tasks giao cho users",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            },
            "example": "1,5,10"
          },
          {
            "name": "unitIds",
            "in": "query",
            "description": "Danh sách Unit IDs để filter tasks giao cho units",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            },
            "example": "1,2"
          },
          {
            "name": "taskTypeIds",
            "in": "query",
            "description": "Danh sách Task Type IDs để filter theo loại công việc",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            },
            "example": "1,2,3"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Số trang (bắt đầu từ 1)",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 1 },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Số items per page (max 100)",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 20 },
            "example": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/MyTasksApiResponse" }
              }
            }
          },
          "400": {
            "description": "Tham số không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/overdue/count/{userId}": {
      "get": {
        "tags": ["overdue-controller"],
        "summary": "Đếm task overdue của user",
        "description": "Lấy số lượng task overdue của một user cụ thể",
        "operationId": "getOverdueTaskCount",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/overdue/check-task/{taskId}": {
      "get": {
        "tags": ["overdue-controller"],
        "summary": "Kiểm tra task overdue",
        "description": "Kiểm tra một task cụ thể có overdue hay không",
        "operationId": "checkTaskOverdue",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": ["notification-controller"],
        "operationId": "getNotifications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Notification" }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/unread-count": {
      "get": {
        "tags": ["notification-controller"],
        "operationId": "countUnread",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/flights/today": {
      "get": {
        "tags": ["flight-controller"],
        "summary": "Get today flights",
        "description": "Retrieve flights for today",
        "operationId": "getTodayFlights",
        "responses": {
          "200": {
            "description": "Successfully retrieved today flights",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/flights/search": {
      "get": {
        "tags": ["flight-controller"],
        "summary": "Search flights",
        "description": "Search flights by keyword",
        "operationId": "searchFlights",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully searched flights",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/flights/searchByDate": {
      "get": {
        "tags": ["flight-controller"],
        "summary": "Search flights by exact date",
        "description": "Search flights by exact date (YYYY-MM-DD format)",
        "operationId": "searchFlightByDate",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid date format",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved flights by date",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/flights/searchByDateAndKeyword": {
      "get": {
        "tags": ["flight-controller"],
        "summary": "Search flights by date and keyword",
        "description": "Search flights by date and optional keyword",
        "operationId": "searchFlightByDateAndKeyword",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid date format",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved flights by date and keyword",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/flights/searchByCriteria": {
      "get": {
        "tags": ["flight-controller"],
        "summary": "Search flights by multiple criteria",
        "description": "Search flights by date (YYYY-MM-DD format), flight number, departure airport, and arrival airport. All parameters are optional.",
        "operationId": "searchFlightsByCriteria",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "flightNumber",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "departureAirport",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "arrivalAirport",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved flights by criteria",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Invalid date format or parameters",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/flights/live-tracking-group": {
      "get": {
        "tags": ["flight-controller"],
        "summary": "Get live tracking flights",
        "description": "Get flights for live tracking (today + yesterday with specific conditions)",
        "operationId": "getLiveTrackingGroup",
        "responses": {
          "200": {
            "description": "Successfully retrieved live tracking flights",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/flights/debug/airports": {
      "get": {
        "tags": ["flight-controller"],
        "summary": "Debug - Check airports in database",
        "description": "Debug endpoint to check all airports and search for specific codes",
        "operationId": "debugAirports",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/api/attachments": {
      "get": {
        "tags": ["Azure Pre-signed URL File Management"],
        "summary": "Lấy tất cả file đính kèm",
        "description": "Lấy danh sách tất cả file đính kèm đã upload",
        "operationId": "getAllAttachments",
        "responses": {
          "200": {
            "description": "Lấy danh sách file thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/download-url/{attachmentId}": {
      "get": {
        "tags": ["Azure Pre-signed URL File Management"],
        "summary": "Tạo pre-signed URL để download file",
        "description": "Tạo pre-signed URL để download file từ Azure Blob Storage",
        "operationId": "generateDownloadUrl",
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "500": {
            "description": "Lỗi server khi tạo download URL",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Tạo download URL thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadUrlApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy file đính kèm",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/assignments/{id}/comments": {
      "get": {
        "tags": ["assignment-controller"],
        "summary": "Lấy danh sách comment của assignment",
        "description": "Lấy tất cả comment của assignment, gồm id, assignmentId, comment, createdAt, user",
        "operationId": "getAssignmentComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách comment thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentCommentsApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/assignments/task/{taskId}": {
      "get": {
        "tags": ["assignment-controller"],
        "summary": "Lấy danh sách assignment theo task",
        "description": "Lấy danh sách assignment theo taskId",
        "operationId": "getAssignmentsByTaskId",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách assignment thành công",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/search": {
      "get": {
        "tags": ["Activity Management"],
        "summary": "Tìm kiếm hoạt động theo tháng/năm",
        "description": "Lấy danh sách hoạt động trong tháng và năm cụ thể",
        "operationId": "searchActivitiesByMonthYear",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "Tháng (1-12)",
            "required": true,
            "schema": { "type": "integer", "format": "int32" },
            "example": 3
          },
          {
            "name": "year",
            "in": "query",
            "description": "Năm",
            "required": true,
            "schema": { "type": "integer", "format": "int32" },
            "example": 2025
          }
        ],
        "responses": {
          "400": {
            "description": "Tham số không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities/search-by-range": {
      "get": {
        "tags": ["Activity Management"],
        "summary": "Lấy hoạt động theo khoảng thời gian",
        "description": "Lấy danh sách hoạt động trong khoảng thời gian từ ngày bắt đầu đến ngày kết thúc",
        "operationId": "getActivitiesByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Ngày bắt đầu (format: yyyy-MM-dd)",
            "required": true,
            "schema": { "type": "string" },
            "example": "2025-03-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Ngày kết thúc (format: yyyy-MM-dd)",
            "required": true,
            "schema": { "type": "string" },
            "example": "2025-03-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Định dạng ngày không hợp lệ hoặc khoảng thời gian không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities/search-by-date": {
      "get": {
        "tags": ["Activity Management"],
        "summary": "Lấy hoạt động theo ngày",
        "description": "Lấy danh sách hoạt động trong ngày cụ thể",
        "operationId": "getActivitiesByDate",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Ngày cần tìm (format: yyyy-MM-dd)",
            "required": true,
            "schema": { "type": "string" },
            "example": "2025-03-15"
          }
        ],
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Định dạng ngày không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities/pinned": {
      "get": {
        "tags": ["Activity Management"],
        "summary": "Lấy hoạt động đã ghim",
        "description": "Lấy danh sách tất cả hoạt động đã được ghim",
        "operationId": "getPinnedActivities",
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities/calendar": {
      "get": {
        "tags": ["Activity Management"],
        "summary": "Lấy dữ liệu calendar view",
        "description": "Lấy dữ liệu hoạt động theo định dạng calendar",
        "operationId": "getCalendarView",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Ngày bắt đầu (format: yyyy-MM-dd)",
            "required": false,
            "schema": { "type": "string" },
            "example": "2025-03-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Ngày kết thúc (format: yyyy-MM-dd)",
            "required": false,
            "schema": { "type": "string" },
            "example": "2025-03-31"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Loại hoạt động",
            "required": false,
            "schema": { "type": "string", "default": "company" },
            "example": "my"
          }
        ],
        "responses": {
          "400": {
            "description": "Tham số không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": ["home-controller"],
        "summary": "Trang chủ API",
        "operationId": "home",
        "responses": {
          "200": {
            "description": "Thành công",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/user-flight-shifts/remove": {
      "delete": {
        "tags": ["user-flight-shift-controller"],
        "summary": "Remove flight assignment",
        "description": "Remove flight assignment for user",
        "operationId": "removeFlightAssignment",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "flightId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "Flight assignment removed successfully",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/tasks/bulk-delete": {
      "delete": {
        "tags": ["task-controller"],
        "summary": "Xoá nhiều task",
        "description": "Xoá nhiều công việc cùng lúc",
        "operationId": "bulkDeleteTasks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeleteTasksRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Xoá thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{id}": {
      "delete": {
        "tags": ["notification-controller"],
        "operationId": "deleteNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/attachments/bulk-delete": {
      "delete": {
        "tags": ["Azure Pre-signed URL File Management"],
        "summary": "Xóa nhiều file đính kèm",
        "description": "Xóa nhiều file đính kèm khỏi Azure Blob Storage và database",
        "operationId": "bulkDeleteAttachments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmFlexibleUploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Không tìm thấy một hoặc nhiều file đính kèm",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "200": {
            "description": "Xóa file thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "500": {
            "description": "Lỗi server khi xóa file",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities/{id}/participants/batch": {
      "delete": {
        "tags": ["Activity Management"],
        "summary": "Xóa nhiều người tham gia",
        "description": "Xóa nhiều người tham gia khỏi hoạt động cùng một lúc",
        "operationId": "removeMultipleParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của hoạt động",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ParticipantDeleteRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Xóa người tham gia thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hoạt động",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Tham số không hợp lệ hoặc không thể xóa hết participants",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    },
    "/api/activities/batch": {
      "delete": {
        "tags": ["Activity Management"],
        "summary": "Xóa nhiều hoạt động",
        "description": "Xóa nhiều hoạt động cùng một lúc theo danh sách ID",
        "operationId": "deleteMultipleActivities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Danh sách ID các hoạt động cần xóa",
                "items": { "type": "integer", "format": "int64" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Xóa hoạt động thành công",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          },
          "400": {
            "description": "Danh sách ID không hợp lệ",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ApiResponseCustom" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Airport": {
        "required": [
          "airportCode",
          "airportName",
          "city",
          "country",
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "airportCode": { "maxLength": 3, "minLength": 3, "type": "string" },
          "airportName": { "type": "string" },
          "latitude": {
            "maximum": 90.0,
            "exclusiveMaximum": false,
            "minimum": -90.0,
            "exclusiveMinimum": false,
            "type": "number"
          },
          "longitude": {
            "maximum": 180.0,
            "exclusiveMaximum": false,
            "minimum": -180.0,
            "exclusiveMinimum": false,
            "type": "number"
          },
          "city": { "type": "string" },
          "country": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Flight": {
        "required": [
          "arrivalTime",
          "departureTime",
          "flightDate",
          "flightNumber"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "flightNumber": { "type": "string" },
          "departureAirport": { "$ref": "#/components/schemas/Airport" },
          "arrivalAirport": { "$ref": "#/components/schemas/Airport" },
          "departureTime": { "$ref": "#/components/schemas/LocalTime" },
          "arrivalTime": { "$ref": "#/components/schemas/LocalTime" },
          "flightDate": { "type": "string", "format": "date" },
          "actualDepartureTime": { "$ref": "#/components/schemas/LocalTime" },
          "actualArrivalTime": { "$ref": "#/components/schemas/LocalTime" },
          "actualDepartureTimeAtArrival": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "arrivalTimeatArrival": { "$ref": "#/components/schemas/LocalTime" },
          "status": { "type": "string" },
          "airline": { "type": "string" },
          "checkInCounters": { "type": "string" },
          "gate": { "type": "integer", "format": "int32" },
          "note": { "type": "string" },
          "userFlightShifts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserFlightShift" }
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": { "type": "integer", "format": "int32" },
          "minute": { "type": "integer", "format": "int32" },
          "second": { "type": "integer", "format": "int32" },
          "nano": { "type": "integer", "format": "int32" }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "roleName": { "type": "string" },
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "teamName": { "type": "string" },
          "units": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Unit" }
          },
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          }
        }
      },
      "Unit": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "unitName": { "type": "string" },
          "team": { "$ref": "#/components/schemas/Team" },
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "expoPushToken": { "type": "string" },
          "isFirstLogin": { "type": "boolean" },
          "role": { "$ref": "#/components/schemas/Role" },
          "team": { "$ref": "#/components/schemas/Team" },
          "unit": { "$ref": "#/components/schemas/Unit" },
          "userFlightShifts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserFlightShift" }
          },
          "userPermissions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserPermission" }
          }
        },
        "description": "User data"
      },
      "UserFlightShift": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "user": { "$ref": "#/components/schemas/User" },
          "flight": { "$ref": "#/components/schemas/Flight" },
          "shiftDate": { "type": "string", "format": "date" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "UserPermission": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "user": { "$ref": "#/components/schemas/User" },
          "permissionCode": { "type": "string" },
          "value": { "type": "boolean" }
        }
      },
      "UserApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": { "$ref": "#/components/schemas/User" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for single user operations"
      },
      "ApiResponseCustom": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Thông báo kết quả",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "Mã trạng thái HTTP",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "object",
            "description": "Dữ liệu trả về (object, list hoặc null). Kiểu thực tế phụ thuộc vào API cụ thể."
          },
          "success": {
            "type": "boolean",
            "description": "Trạng thái thành công hay thất bại",
            "example": true
          }
        },
        "description": "Response chuẩn cho tất cả API",
        "example": {
          "message": "Thành công",
          "statusCode": 200,
          "data": {
            "id": 101,
            "name": "Họp định kỳ tuần",
            "location": "Phòng họp A1",
            "startTime": "2025-10-01T13:59:01.290Z",
            "endTime": "2025-10-01T15:00:00.000Z",
            "notes": "Thảo luận về kế hoạch Q4",
            "participants": [
              {
                "id": 201,
                "participantType": "USER",
                "participantId": 1,
                "participantName": "Nguyễn Văn A"
              },
              {
                "id": 202,
                "participantType": "USER",
                "participantId": 2,
                "participantName": "Trần Thị B"
              },
              {
                "id": 203,
                "participantType": "USER",
                "participantId": 3,
                "participantName": "Lê Văn C"
              }
            ],
            "createdAt": "2025-10-01T14:00:00.000Z",
            "updatedAt": "2025-10-01T14:00:00.000Z",
            "pinned": false
          },
          "success": true
        }
      },
      "AssignShiftRequest": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int32" },
          "shiftDate": { "type": "string" },
          "shiftId": { "type": "integer", "format": "int32" }
        }
      },
      "UpdateUserFlightShiftRequest": {
        "type": "object",
        "properties": {
          "shiftDate": { "type": "string", "format": "date" },
          "flightId": { "type": "integer", "format": "int64" }
        }
      },
      "UpdateTaskDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Task ID",
            "format": "int32",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Kiểm tra hành lý (updated)"
          },
          "content": {
            "type": "string",
            "description": "Task content/description",
            "example": "Kiểm tra hành lý khách hàng - cập nhật"
          },
          "instructions": {
            "type": "string",
            "description": "Task instructions",
            "example": "Thực hiện theo quy trình ABC - cập nhật"
          },
          "notes": {
            "type": "string",
            "description": "Task notes",
            "example": "Ghi chú bổ sung - cập nhật"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "URGENT",
            "enum": ["LOW", "NORMAL", "HIGH", "URGENT"]
          },
          "taskTypeId": {
            "type": "integer",
            "description": "Task type ID",
            "format": "int32",
            "example": 1
          }
        },
        "description": "Request to update an existing task"
      },
      "TaskApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Đã tạo thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 201
          },
          "data": { "$ref": "#/components/schemas/TaskDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for task creation/update operations"
      },
      "TaskDTO": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Task ID",
            "format": "int32",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Kiểm tra hành lý"
          },
          "content": {
            "type": "string",
            "description": "Task content/description",
            "example": "Kiểm tra hành lý khách hàng"
          },
          "instructions": {
            "type": "string",
            "description": "Task instructions",
            "example": "Thực hiện theo quy trình ABC"
          },
          "notes": {
            "type": "string",
            "description": "Task notes",
            "example": "Ghi chú bổ sung"
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "example": "IN_PROGRESS",
            "enum": ["OPEN", "IN_PROGRESS", "COMPLETED", "OVERDUE"]
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "HIGH",
            "enum": ["LOW", "NORMAL", "HIGH", "URGENT"]
          },
          "taskType": { "$ref": "#/components/schemas/TaskTypeDTO" },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "description": "User ID who created this task",
            "format": "int32",
            "example": 123
          }
        },
        "description": "Task data transfer object"
      },
      "TaskTypeDTO": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Task type ID",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Task type name",
            "example": "Bảo trì"
          }
        },
        "description": "Task Type Data Transfer Object",
        "example": { "id": 1, "name": "Bảo trì" }
      },
      "UpdateTaskTypeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Task type name",
            "example": "Bảo trì"
          }
        },
        "description": "Request to update an existing task type"
      },
      "Shift": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "shiftCode": { "type": "string" },
          "startTime": { "$ref": "#/components/schemas/LocalTime" },
          "endTime": { "$ref": "#/components/schemas/LocalTime" },
          "location": { "type": "string" },
          "description": { "type": "string" },
          "team": { "$ref": "#/components/schemas/Team" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "RoleDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "roleName": { "type": "string" }
        }
      },
      "UpdateFlightRequest": {
        "required": [
          "arrivalAirportId",
          "arrivalTime",
          "departureAirportId",
          "departureTime",
          "flightDate",
          "flightNumber"
        ],
        "type": "object",
        "properties": {
          "flightNumber": {
            "type": "string",
            "description": "Flight number",
            "example": "VN123"
          },
          "departureAirportId": {
            "type": "integer",
            "description": "Departure airport ID",
            "format": "int64",
            "example": 1
          },
          "arrivalAirportId": {
            "type": "integer",
            "description": "Arrival airport ID",
            "format": "int64",
            "example": 2
          },
          "departureTime": {
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$",
            "type": "string",
            "description": "Scheduled departure time",
            "example": "08:30:00"
          },
          "arrivalTime": {
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$",
            "type": "string",
            "description": "Scheduled arrival time",
            "example": "10:45:00"
          },
          "arrivalTimeatArrival": {
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$",
            "type": "string",
            "description": "Actual arrival time at destination",
            "example": "10:50:00"
          },
          "status": {
            "type": "string",
            "description": "Flight status",
            "example": "ON_TIME"
          },
          "flightDate": {
            "type": "string",
            "description": "Flight date",
            "format": "date",
            "example": "2025-06-22"
          },
          "airline": {
            "type": "string",
            "description": "Airline name",
            "example": "Vietnam Airlines"
          },
          "checkInCounters": {
            "type": "string",
            "description": "Check-in counters",
            "example": "A1-A5"
          },
          "gate": {
            "type": "integer",
            "description": "Gate number",
            "format": "int32",
            "example": 12
          },
          "note": {
            "type": "string",
            "description": "Additional notes",
            "example": "Weather delay expected"
          }
        },
        "description": "Request DTO for updating flight information"
      },
      "UpdateAttachmentFileNameRequest": {
        "type": "object",
        "properties": { "fileName": { "type": "string" } }
      },
      "AttachmentApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": { "$ref": "#/components/schemas/AttachmentDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for single attachment operations"
      },
      "AttachmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Attachment ID",
            "format": "int32",
            "example": 1
          },
          "filePath": {
            "type": "string",
            "description": "File path",
            "example": "/uploads/documents/file.pdf"
          },
          "fileName": {
            "type": "string",
            "description": "Original file name",
            "example": "document.pdf"
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64",
            "example": 1024000
          },
          "createdAt": {
            "type": "string",
            "description": "Upload timestamp",
            "format": "date-time"
          },
          "uploadedBy": { "$ref": "#/components/schemas/UserDTO" }
        },
        "description": "Attachment data transfer object"
      },
      "UserDTO": {
        "required": [
          "email",
          "id",
          "name",
          "roleId",
          "roleName",
          "teamId",
          "teamName",
          "unitId",
          "unitName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the user",
            "format": "int32"
          },
          "name": { "type": "string", "description": "Name of the user" },
          "email": { "type": "string", "description": "Email of the user" },
          "roleName": {
            "type": "string",
            "description": "Role name of the user"
          },
          "teamName": {
            "type": "string",
            "description": "Team name of the user"
          },
          "unitName": {
            "type": "string",
            "description": "Unit name of the user"
          },
          "roleId": {
            "type": "integer",
            "description": "Role ID of the user",
            "format": "int32"
          },
          "teamId": {
            "type": "integer",
            "description": "Team ID of the user",
            "format": "int32"
          },
          "unitId": {
            "type": "integer",
            "description": "Unit ID of the user",
            "format": "int32"
          },
          "permissions": { "type": "array", "items": { "type": "string" } }
        },
        "description": "Unit leader (DEPRECATED - will be removed)",
        "deprecated": true
      },
      "UpdateAssignmentRequest": {
        "type": "object",
        "properties": {
          "recipientType": { "type": "string" },
          "recipientId": { "type": "integer", "format": "int32" },
          "dueAt": { "type": "string", "format": "date-time" },
          "status": {
            "type": "string",
            "enum": ["WORKING", "DONE", "CANCELLED", "OVERDUE"]
          },
          "note": { "type": "string" }
        }
      },
      "AssignmentApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Đã tạo thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 201
          },
          "data": { "$ref": "#/components/schemas/AssignmentDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for assignment creation/update operations"
      },
      "AssignmentDTO": {
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "integer",
            "description": "Assignment ID",
            "format": "int32",
            "example": 1
          },
          "taskId": {
            "type": "integer",
            "description": "Task ID",
            "format": "int32",
            "example": 5
          },
          "recipientType": {
            "type": "string",
            "description": "Recipient type",
            "example": "USER",
            "enum": ["USER", "TEAM", "UNIT"]
          },
          "assignedAt": {
            "type": "string",
            "description": "Assignment timestamp",
            "format": "date-time"
          },
          "dueAt": {
            "type": "string",
            "description": "Due date",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "description": "Completion timestamp",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Assignment status",
            "example": "IN_PROGRESS",
            "enum": ["WORKING", "DONE", "CANCELLED", "OVERDUE"]
          },
          "note": {
            "type": "string",
            "description": "Assignment note",
            "example": "Urgent task"
          },
          "assignedByUser": { "$ref": "#/components/schemas/UserDTO" },
          "completedByUser": { "$ref": "#/components/schemas/UserDTO" },
          "recipientUser": { "$ref": "#/components/schemas/UserDTO" },
          "recipientId": {
            "type": "integer",
            "description": "Recipient ID (team or unit ID)",
            "format": "int32",
            "example": 10
          },
          "recipientTeamName": {
            "type": "string",
            "description": "Team name (if recipientType = TEAM)",
            "example": "Security Team"
          },
          "recipientUnitName": {
            "type": "string",
            "description": "Unit name (if recipientType = UNIT)",
            "example": "Airport Operations"
          },
          "recipientTeamLead": { "$ref": "#/components/schemas/UserDTO" },
          "recipientUnitLead": { "$ref": "#/components/schemas/UserDTO" }
        },
        "description": "Assignment information for tasks"
      },
      "ActivityParticipantRequest": {
        "required": ["participantIds", "participantType"],
        "type": "object",
        "properties": {
          "participantType": {
            "pattern": "^(USER|TEAM|UNIT)$",
            "type": "string",
            "description": "Type of participant",
            "example": "USER",
            "enum": ["USER", "TEAM", "UNIT"]
          },
          "participantIds": {
            "type": "array",
            "description": "Array of participant IDs",
            "example": [1, 2, 3],
            "items": {
              "type": "integer",
              "description": "Array of participant IDs",
              "format": "int64"
            }
          }
        },
        "description": "Request DTO for activity participant - contains type and array of IDs"
      },
      "ActivityRequest": {
        "required": [
          "endDate",
          "location",
          "participants",
          "startDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Activity title",
            "example": "Họp định kỳ tuần"
          },
          "location": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Activity location",
            "example": "Phòng họp A1"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the activity",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the activity",
            "format": "date-time"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Additional description",
            "example": "Thảo luận về kế hoạch Q4"
          },
          "participants": {
            "type": "array",
            "description": "List of participants (required - activity must have at least one participant)",
            "items": {
              "$ref": "#/components/schemas/ActivityParticipantRequest"
            }
          },
          "pinned": {
            "type": "boolean",
            "description": "Whether the activity is pinned",
            "example": false
          }
        },
        "description": "Request DTO for creating or updating activities"
      },
      "ApplyShiftMultiDTO": {
        "type": "object",
        "properties": {
          "shiftDate": { "type": "string", "format": "date" },
          "userIds": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "shiftCode": { "type": "string" }
        }
      },
      "ApplyFlightShiftRequest": {
        "type": "object",
        "properties": {
          "flightId": { "type": "integer", "format": "int64" },
          "userIds": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "shiftDate": { "type": "string", "format": "date" }
        }
      },
      "TeamDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "teamName": { "type": "string" }
        },
        "description": "List of assignable teams for current user"
      },
      "TeamCreateApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Tạo team thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 201
          },
          "data": { "$ref": "#/components/schemas/TeamDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for team creation operations"
      },
      "AssignmentRequest": {
        "required": ["recipientId", "recipientType"],
        "type": "object",
        "properties": {
          "recipientId": {
            "type": "integer",
            "description": "Recipient ID (user, team, or unit ID)",
            "format": "int32",
            "example": 123
          },
          "recipientType": {
            "type": "string",
            "description": "Type of recipient",
            "example": "USER",
            "enum": ["USER", "TEAM", "UNIT"]
          },
          "dueAt": {
            "type": "string",
            "description": "Due date for the assignment",
            "format": "date-time"
          },
          "note": {
            "type": "string",
            "description": "Assignment note",
            "example": "Please complete this urgently"
          }
        },
        "description": "Request to assign a task to a recipient"
      },
      "CreateTaskRequest": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Kiểm tra hành lý"
          },
          "content": {
            "type": "string",
            "description": "Task content/description",
            "example": "Kiểm tra hành lý khách hàng"
          },
          "instructions": {
            "type": "string",
            "description": "Task instructions",
            "example": "Thực hiện theo quy trình ABC"
          },
          "notes": {
            "type": "string",
            "description": "Task notes",
            "example": "Ghi chú bổ sung"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "HIGH",
            "enum": ["LOW", "NORMAL", "HIGH", "URGENT"]
          },
          "taskTypeId": {
            "type": "integer",
            "description": "Task type ID",
            "format": "int32",
            "example": 1
          },
          "assignments": {
            "type": "array",
            "description": "List of task assignments",
            "items": { "$ref": "#/components/schemas/AssignmentRequest" }
          },
          "attachmentIds": {
            "type": "array",
            "description": "List of attachment IDs to assign to this task",
            "example": [1, 2, 3],
            "items": {
              "type": "integer",
              "description": "List of attachment IDs to assign to this task",
              "format": "int32"
            }
          }
        },
        "description": "Request to create a new task"
      },
      "CreateSubtaskRequest": {
        "required": ["title"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Subtask title",
            "example": "Chi tiết kiểm tra passport"
          },
          "content": {
            "type": "string",
            "description": "Subtask content/description",
            "example": "Kiểm tra tính hợp lệ của passport"
          },
          "instructions": {
            "type": "string",
            "description": "Subtask instructions",
            "example": "Kiểm tra theo quy trình XYZ"
          },
          "notes": {
            "type": "string",
            "description": "Subtask notes",
            "example": "Lưu ý đặc biệt về passport VIP"
          },
          "priority": {
            "type": "string",
            "description": "Subtask priority",
            "example": "NORMAL",
            "enum": ["LOW", "NORMAL", "HIGH", "URGENT"]
          },
          "assignments": {
            "type": "array",
            "description": "List of assignments for this subtask",
            "items": { "$ref": "#/components/schemas/AssignmentRequest" }
          },
          "attachmentIds": {
            "type": "array",
            "description": "List of attachment IDs to assign to this subtask",
            "example": [1, 2, 3],
            "items": {
              "type": "integer",
              "description": "List of attachment IDs to assign to this subtask",
              "format": "int32"
            }
          }
        },
        "description": "Request to create a subtask"
      },
      "TaskAttachmentUploadRequest": {
        "required": ["attachmentIds"],
        "type": "object",
        "properties": {
          "attachmentIds": {
            "type": "array",
            "description": "Danh sách ID của attachment cần gán vào task",
            "example": [1, 2, 3],
            "items": {
              "type": "integer",
              "description": "Danh sách ID của attachment cần gán vào task",
              "format": "int32"
            }
          }
        },
        "description": "Request để upload attachment cho task cụ thể"
      },
      "TaskAttachmentsApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of task attachments",
            "items": { "$ref": "#/components/schemas/AttachmentDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success flag",
            "example": true
          }
        },
        "description": "API response for task attachments"
      },
      "CreateTaskTypeRequest": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Task type name",
            "example": "Bảo trì"
          }
        },
        "description": "Request to create a new task type"
      },
      "CreateFlightRequest": {
        "required": [
          "arrivalAirportId",
          "arrivalTime",
          "departureAirportId",
          "departureTime",
          "flightDate",
          "flightNumber"
        ],
        "type": "object",
        "properties": {
          "flightNumber": { "type": "string" },
          "departureAirportId": { "type": "integer", "format": "int64" },
          "arrivalAirportId": { "type": "integer", "format": "int64" },
          "departureTime": {
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$",
            "type": "string"
          },
          "arrivalTime": {
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$",
            "type": "string"
          },
          "arrivalTimeatArrival": {
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$",
            "type": "string"
          },
          "status": { "type": "string" },
          "flightDate": { "type": "string", "format": "date" },
          "airline": { "type": "string" },
          "checkInCounters": { "type": "string" },
          "gate": { "type": "integer", "format": "int32" },
          "note": { "type": "string" }
        }
      },
      "RegisterRequest": {
        "required": ["email", "name", "password"],
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": {
            "maxLength": 2147483647,
            "minLength": 6,
            "type": "string"
          },
          "roleId": { "type": "integer", "format": "int32" },
          "teamId": { "type": "integer", "format": "int32" },
          "unitId": { "type": "integer", "format": "int32" }
        }
      },
      "RegisterApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Đăng ký thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 201
          },
          "data": { "$ref": "#/components/schemas/RegisterDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for registration operations"
      },
      "RegisterDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "$ref": "#/components/schemas/RoleDTO" },
          "team": { "$ref": "#/components/schemas/TeamDTO" },
          "unit": { "$ref": "#/components/schemas/UnitDTO" }
        },
        "description": "Registration data"
      },
      "UnitDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "unitName": { "type": "string" },
          "teamId": { "type": "integer", "format": "int32" }
        },
        "description": "List of assignable units for current user"
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "LoginApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Đăng nhập thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": { "$ref": "#/components/schemas/LoginDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for login operations"
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "accessToken": { "type": "string" },
          "tokenType": { "type": "string" },
          "expiresIn": { "type": "integer", "format": "int64" },
          "requiresPasswordChange": { "type": "boolean" },
          "message": { "type": "string" }
        },
        "description": "Login data containing token and user info"
      },
      "FirstLoginPasswordChangeRequest": {
        "required": ["confirmPassword", "currentPassword", "newPassword"],
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "description": "Current password",
            "example": "currentPassword123"
          },
          "newPassword": {
            "maxLength": 2147483647,
            "minLength": 6,
            "type": "string",
            "description": "New password",
            "example": "newPassword123"
          },
          "confirmPassword": {
            "type": "string",
            "description": "Confirm new password",
            "example": "newPassword123"
          }
        },
        "description": "Request for changing password on first login"
      },
      "FileUploadInfo": {
        "required": ["contentType", "fileName", "fileSize"],
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Tên file gốc",
            "example": "document.pdf"
          },
          "fileSize": {
            "type": "integer",
            "description": "Kích thước file (bytes)",
            "format": "int64",
            "example": 1024000
          },
          "contentType": {
            "type": "string",
            "description": "Loại content của file",
            "example": "application/pdf"
          }
        },
        "description": "Thông tin file upload",
        "example": [
          {
            "fileName": "document.pdf",
            "fileSize": 1024000,
            "contentType": "application/pdf"
          }
        ]
      },
      "FlexibleUploadRequest": {
        "required": ["files"],
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "description": "Danh sách file cần upload",
            "example": [
              {
                "fileName": "document.pdf",
                "fileSize": 1024000,
                "contentType": "application/pdf"
              }
            ],
            "items": { "$ref": "#/components/schemas/FileUploadInfo" }
          }
        },
        "description": "Request để upload file - hỗ trợ cả single và multiple files"
      },
      "FlexiblePreSignedUrlDTO": {
        "required": ["files"],
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "description": "Danh sách pre-signed URL",
            "items": { "$ref": "#/components/schemas/PreSignedUrlDTO" }
          },
          "message": {
            "type": "string",
            "description": "Thông báo kết quả",
            "example": "Tạo thành công 3 pre-signed URL"
          }
        },
        "description": "Response cho pre-signed URL - hỗ trợ cả single và multiple files"
      },
      "PreSignedUrlApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Tạo pre-signed URL thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": { "$ref": "#/components/schemas/FlexiblePreSignedUrlDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for pre-signed URL generation"
      },
      "PreSignedUrlDTO": {
        "type": "object",
        "properties": {
          "uploadUrl": { "type": "string" },
          "attachmentId": { "type": "integer", "format": "int32" },
          "fileName": { "type": "string" },
          "uniqueFileName": { "type": "string" },
          "fileSize": { "type": "integer", "format": "int64" },
          "contentType": { "type": "string" },
          "expiresAt": { "type": "string", "format": "date-time" },
          "message": { "type": "string" },
          "hasError": { "type": "boolean" }
        },
        "description": "Danh sách pre-signed URL"
      },
      "ConfirmFlexibleUploadRequest": {
        "required": ["attachmentIds"],
        "type": "object",
        "properties": {
          "attachmentIds": {
            "type": "array",
            "description": "Danh sách ID của attachment cần xác nhận upload",
            "example": [123, 124, 125],
            "items": {
              "type": "integer",
              "description": "Danh sách ID của attachment cần xác nhận upload",
              "format": "int32"
            }
          }
        },
        "description": "Request để xác nhận upload file - hỗ trợ cả single và multiple files"
      },
      "AttachmentListApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of attachments",
            "items": { "$ref": "#/components/schemas/AttachmentDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for attachment list operations"
      },
      "CreateAssignmentRequest": {
        "type": "object",
        "properties": {
          "recipientType": { "type": "string" },
          "recipientId": { "type": "integer", "format": "int32" },
          "dueAt": { "type": "string", "format": "date-time" },
          "note": { "type": "string" }
        }
      },
      "CreateAssignmentsRequest": {
        "type": "object",
        "properties": {
          "taskId": { "type": "integer", "format": "int32" },
          "assignments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CreateAssignmentRequest" }
          }
        }
      },
      "AssignmentListApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of assignments",
            "items": { "$ref": "#/components/schemas/AssignmentDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for assignment list operations"
      },
      "AssignmentCommentRequest": {
        "type": "object",
        "properties": { "comment": { "type": "string" } }
      },
      "AssignmentCommentHistoryDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "assignmentId": { "type": "integer", "format": "int64" },
          "comment": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "user": { "$ref": "#/components/schemas/UserDTO" }
        },
        "description": "List of assignment comments"
      },
      "AssignmentCommentsApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of assignment comments",
            "items": {
              "$ref": "#/components/schemas/AssignmentCommentHistoryDTO"
            }
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for assignment comments"
      },
      "ActivityParticipantDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Participant record ID",
            "format": "int64",
            "example": 201
          },
          "participantType": {
            "type": "string",
            "description": "Type of participant",
            "example": "USER",
            "enum": ["USER", "TEAM", "UNIT"]
          },
          "participantId": {
            "type": "integer",
            "description": "Participant ID",
            "format": "int64",
            "example": 1
          },
          "participantName": {
            "type": "string",
            "description": "Participant name for display",
            "example": "Nguyễn Văn A"
          }
        },
        "description": "Activity participant information",
        "example": {
          "id": 201,
          "participantType": "USER",
          "participantId": 1,
          "participantName": "Nguyễn Văn A"
        }
      },
      "ActivityParticipantsApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Thông báo kết quả",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "Mã trạng thái HTTP",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "Dữ liệu trả về (object, list hoặc null). Kiểu thực tế phụ thuộc vào API cụ thể.",
            "items": { "$ref": "#/components/schemas/ActivityParticipantDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Trạng thái thành công hay thất bại",
            "example": true
          }
        },
        "description": "Response wrapper for activity participants"
      },
      "FlightTimeUpdateRequest": {
        "type": "object",
        "properties": {
          "actualDepartureTime": { "type": "string" },
          "actualArrivalTime": { "type": "string" },
          "actualDepartureTimeAtArrival": { "type": "string" },
          "arrivalTimeatArrival": { "type": "string" },
          "status": { "type": "string" },
          "eventType": { "type": "string" }
        }
      },
      "UserListApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of users",
            "items": { "$ref": "#/components/schemas/UserDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for user list operations"
      },
      "CurrentUserApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": { "$ref": "#/components/schemas/UserDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for current user operations"
      },
      "UnitListApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of units (all units or filtered by teamId)",
            "items": { "$ref": "#/components/schemas/UnitDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for unit list operations"
      },
      "AssignableUnitsApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of assignable units for current user",
            "items": { "$ref": "#/components/schemas/UnitDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for assignable units operations"
      },
      "TeamListApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of teams",
            "items": { "$ref": "#/components/schemas/TeamDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for team list operations"
      },
      "AssignableTeamsApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of assignable teams for current user",
            "items": { "$ref": "#/components/schemas/TeamDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for assignable teams operations"
      },
      "TaskDetailDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Task ID",
            "format": "int32",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Kiểm tra hành lý"
          },
          "content": {
            "type": "string",
            "description": "Task content/description",
            "example": "Kiểm tra hành lý khách hàng"
          },
          "instructions": {
            "type": "string",
            "description": "Task instructions",
            "example": "Thực hiện theo quy trình ABC"
          },
          "notes": {
            "type": "string",
            "description": "Task notes",
            "example": "Ghi chú bổ sung"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp",
            "format": "date-time"
          },
          "createdByUser": { "$ref": "#/components/schemas/UserDTO" },
          "assignments": {
            "type": "array",
            "description": "List of task assignments",
            "items": { "$ref": "#/components/schemas/AssignmentDTO" }
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "example": "IN_PROGRESS",
            "enum": ["OPEN", "IN_PROGRESS", "COMPLETED", "OVERDUE"]
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "HIGH",
            "enum": ["LOW", "NORMAL", "HIGH", "URGENT"]
          },
          "parentId": {
            "type": "integer",
            "description": "Parent task ID (for subtasks)",
            "format": "int32",
            "example": 5
          },
          "hasSubtask": {
            "type": "boolean",
            "description": "Whether this task has subtasks",
            "example": true
          },
          "attachments": {
            "type": "array",
            "description": "List of attached files",
            "items": { "$ref": "#/components/schemas/AttachmentDTO" }
          },
          "taskType": { "$ref": "#/components/schemas/TaskTypeDTO" }
        },
        "description": "Detailed task information with assignments and attachments"
      },
      "TaskSubtasksApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of subtasks",
            "items": { "$ref": "#/components/schemas/TaskDetailDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for task subtasks list"
      },
      "TaskDetailApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": { "$ref": "#/components/schemas/TaskDetailDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for task detail"
      },
      "TaskTreeApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": { "$ref": "#/components/schemas/TaskTreeDTO" },
          "success": {
            "type": "boolean",
            "description": "Success flag",
            "example": true
          }
        },
        "description": "API response for task tree (hierarchical structure)"
      },
      "TaskTreeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Task ID",
            "format": "int32",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Kiểm tra hành lý"
          },
          "content": {
            "type": "string",
            "description": "Task content/description",
            "example": "Kiểm tra hành lý khách hàng"
          },
          "instructions": {
            "type": "string",
            "description": "Task instructions",
            "example": "Thực hiện theo quy trình ABC"
          },
          "notes": {
            "type": "string",
            "description": "Task notes",
            "example": "Ghi chú bổ sung"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "HIGH"
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "example": "IN_PROGRESS"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "example": "2025-09-04T10:30:00"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp",
            "example": "2025-09-04T11:00:00"
          },
          "parentId": {
            "type": "integer",
            "description": "Parent task ID",
            "format": "int32",
            "example": 5
          },
          "level": {
            "type": "integer",
            "description": "Depth level in tree (0 = root)",
            "format": "int32",
            "example": 1
          },
          "createdByUser": { "$ref": "#/components/schemas/UserDTO" },
          "assignments": {
            "type": "array",
            "description": "List of task assignments",
            "items": { "$ref": "#/components/schemas/AssignmentDTO" }
          },
          "attachments": {
            "type": "array",
            "description": "List of attached files",
            "items": { "$ref": "#/components/schemas/AttachmentDTO" }
          },
          "taskType": { "$ref": "#/components/schemas/TaskTypeDTO" },
          "subtasks": {
            "type": "array",
            "description": "List of nested subtasks",
            "items": { "$ref": "#/components/schemas/TaskTreeDTO" }
          },
          "totalSubtasks": { "type": "integer", "format": "int32" },
          "hasSubtasks": { "type": "boolean" }
        },
        "description": "Task with hierarchical tree structure (nested representation)"
      },
      "TaskSubtreeApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "List of tasks in subtree",
            "items": { "$ref": "#/components/schemas/TaskSubtreeDTO" }
          },
          "success": {
            "type": "boolean",
            "description": "Success flag",
            "example": true
          }
        },
        "description": "API response for task subtree (flat list)"
      },
      "TaskSubtreeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Task ID",
            "format": "int32",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Kiểm tra hành lý"
          },
          "content": {
            "type": "string",
            "description": "Task content/description",
            "example": "Kiểm tra hành lý khách hàng"
          },
          "instructions": {
            "type": "string",
            "description": "Task instructions",
            "example": "Thực hiện theo quy trình ABC"
          },
          "notes": {
            "type": "string",
            "description": "Task notes",
            "example": "Ghi chú bổ sung"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp",
            "format": "date-time"
          },
          "createdByUser": { "$ref": "#/components/schemas/UserDTO" },
          "assignments": {
            "type": "array",
            "description": "List of task assignments",
            "items": { "$ref": "#/components/schemas/AssignmentDTO" }
          },
          "status": {
            "type": "string",
            "description": "Task status",
            "example": "IN_PROGRESS",
            "enum": ["OPEN", "IN_PROGRESS", "COMPLETED", "OVERDUE"]
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "HIGH",
            "enum": ["LOW", "NORMAL", "HIGH", "URGENT"]
          },
          "parentId": {
            "type": "integer",
            "description": "Parent task ID (for subtasks)",
            "format": "int32",
            "example": 5
          },
          "attachments": {
            "type": "array",
            "description": "List of attached files",
            "items": { "$ref": "#/components/schemas/AttachmentDTO" }
          },
          "taskType": { "$ref": "#/components/schemas/TaskTypeDTO" }
        },
        "description": "Task subtree information (flat representation)"
      },
      "MyTasksApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": { "$ref": "#/components/schemas/MyTasksData" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper specifically for /my tasks endpoint"
      },
      "MyTasksData": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "description": "List of tasks",
            "items": { "$ref": "#/components/schemas/TaskDetailDTO" }
          },
          "pagination": { "$ref": "#/components/schemas/PaginationInfo" }
        },
        "description": "Data structure for my tasks API response"
      },
      "PaginationInfo": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "Current page number (1-based)",
            "format": "int32",
            "example": 1
          },
          "pageSize": {
            "type": "integer",
            "description": "Number of items per page",
            "format": "int32",
            "example": 20
          },
          "totalElements": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int64",
            "example": 150
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages",
            "format": "int32",
            "example": 8
          },
          "hasNext": {
            "type": "boolean",
            "description": "Whether there is a next page",
            "example": true
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Whether there is a previous page",
            "example": false
          }
        },
        "description": "Pagination information"
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "userId": { "type": "integer", "format": "int32" },
          "type": { "type": "string" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "relatedId": { "type": "integer", "format": "int32" },
          "createdAt": { "type": "string", "format": "date-time" },
          "isRead": { "type": "boolean" }
        }
      },
      "DownloadUrlApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Tạo download URL thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": {
            "type": "string",
            "description": "Download URL string",
            "example": "https://storage.blob.core.windows.net/container/file.pdf?signature=..."
          },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for download URL generation"
      },
      "ActivityDTO": {
        "required": ["endDate", "location", "startDate", "title"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Activity ID",
            "format": "int64",
            "example": 101
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Activity title",
            "example": "Họp định kỳ tuần"
          },
          "location": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Activity location",
            "example": "Phòng họp A1"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time",
            "example": "2025-10-01T13:59:01.29Z"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "example": "2025-10-01T15:00:00Z"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "Activity description",
            "example": "Thảo luận về kế hoạch Q4"
          },
          "participants": {
            "type": "array",
            "description": "List of participants",
            "items": { "$ref": "#/components/schemas/ActivityParticipantDTO" }
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "format": "date-time",
            "example": "2025-10-01T14:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp",
            "format": "date-time",
            "example": "2025-10-01T14:00:00Z"
          },
          "pinned": {
            "type": "boolean",
            "description": "Whether the activity is pinned",
            "example": false
          }
        },
        "description": "Activity response DTO",
        "example": {
          "id": 101,
          "title": "Họp định kỳ tuần",
          "location": "Phòng họp A1",
          "startDate": "2025-10-01T13:59:01.290Z",
          "endDate": "2025-10-01T15:00:00.000Z",
          "description": "Thảo luận về kế hoạch Q4",
          "participants": [
            {
              "id": 201,
              "participantType": "USER",
              "participantId": 1,
              "participantName": "Nguyễn Văn A"
            },
            {
              "id": 202,
              "participantType": "USER",
              "participantId": 2,
              "participantName": "Trần Thị B"
            },
            {
              "id": 203,
              "participantType": "USER",
              "participantId": 3,
              "participantName": "Lê Văn C"
            }
          ],
          "createdAt": "2025-10-01T14:00:00.000Z",
          "updatedAt": "2025-10-01T14:00:00.000Z",
          "pinned": false
        }
      },
      "CalendarApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 200
          },
          "data": { "$ref": "#/components/schemas/CalendarDTO" },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper specifically for calendar activities endpoint"
      },
      "CalendarDTO": {
        "type": "object",
        "properties": {
          "currentDate": {
            "type": "string",
            "description": "Ngày hiện tại của calendar",
            "format": "date",
            "example": "2025-09-27"
          },
          "activities": {
            "type": "array",
            "description": "Danh sách activities trong calendar view",
            "items": { "$ref": "#/components/schemas/ActivityDTO" }
          },
          "activityType": {
            "type": "string",
            "description": "Loại activities được trả về",
            "example": "company",
            "enum": ["company", "my"]
          }
        },
        "description": "Calendar view với activities theo ngày"
      },
      "UserDeleteApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Xóa user thành công"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 204
          },
          "data": { "type": "object", "writeOnly": true },
          "success": {
            "type": "boolean",
            "description": "Success status",
            "example": true
          }
        },
        "description": "API response wrapper for user delete operations"
      },
      "BulkDeleteTasksRequest": {
        "required": ["taskIds"],
        "type": "object",
        "properties": {
          "taskIds": {
            "type": "array",
            "description": "Danh sách ID của các task cần xóa",
            "example": [1, 2, 3],
            "items": {
              "type": "integer",
              "description": "Danh sách ID của các task cần xóa",
              "format": "int32"
            }
          }
        },
        "description": "Request để xóa nhiều task cùng lúc"
      },
      "ParticipantDeleteRequest": {
        "required": ["participantId", "participantType"],
        "type": "object",
        "properties": {
          "participantType": {
            "pattern": "^(USER|TEAM|UNIT)$",
            "type": "string",
            "description": "Type of participant",
            "example": "USER",
            "enum": ["USER", "TEAM", "UNIT"]
          },
          "participantId": {
            "type": "integer",
            "description": "ID of the participant to delete",
            "format": "int64",
            "example": 1
          }
        },
        "description": "Request DTO for deleting a single participant"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
